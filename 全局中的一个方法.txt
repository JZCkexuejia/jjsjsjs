
Sub LoadDataGridView()  
	Dim  connectionString As String = "Data Source=172.20.1.25;Connection Timeout=60000; Initial Catalog=MFG_ReportSystem_PRD;User ID=MFG_ReportSystem;Password=U2!5J9^45H35|N@YRCS2;pooling=true" 
	Dim query As String = "SELECT * FROM TestVB" 	 
	' 创建一个新的SqlConnection对象 
	Using connection As New System.Data.SqlClient.SqlConnection(connectionString) 
		Try 
			' 打开连接 
			connection.Open() 
 
			' 创建一个SqlCommand对象 
			Using command As New System.Data.SqlClient.SqlCommand(query, connection) 
 
				' 创建一个SqlDataAdapter对象来填充DataSet 
				Using adapter As New System.Data.SqlClient.SqlDataAdapter(command) 
					Dim dataTable As New Data.DataTable() 
					adapter.Fill(dataTable) ' 填充DataTable 
 
					' 将DataTable设置为DataGridView的数据源 
					C("Grid1").DataSource = Nothing  
					C("Grid1").DataSource = dataTable 
					C("Grid1").AllowUserToAddRows = False 
					C("Grid1").Columns(0).Visible = False 
 
 
				End Using ' SqlDataAdapter 
 
			End Using ' SqlCommand 
 
		Catch ex As Exception 
			' 异常处理 
			msgbox("Error: " & ex.Message) 
		End Try 
	End Using ' SqlConnection 
End Sub  

''移除列
Sub RemoveCol(dt As DataTable, col As String)
	If dt.Columns.Contains(col) Then 
		dt.Columns.Remove(col) 
	End If 
	 
End Sub  


Sub CopyZip( originalData As String, outputFilePath As String)
	 
	 
	zipdirectory(originalData,outputFilePath) 	 
	 
End Sub  


Function ComExcel(savePath As String,excelFilewithPath As String)
	Try 
		''LoadDataGridView()  
		''Dim str As String =C("txtFileName").Text   
		'		Dim excelFilewithPath As String =C("txtFileName").Text 
		'		Dim savePath As String=C("txtSavePath").Text 
 
		If String.IsNullOrWhiteSpace(excelFilewithPath) Then  
			msgbox("请先选择文件") 
		End If  
 
 
		If String.IsNullOrWhiteSpace(savePath) Then  
			msgbox("请填写保存路径") 
		End If  
 
		Dim excel As New XLSXExport(excelFilewithPath)  
		Dim sheetName As String=excel.SheetNames(0)  
 
 
		'删除前面4行  
		excel.DeleteRow(sheetName,1,4)  
 
		Dim dtExcel As DataTable=excel.ReadWorkSheetToDataTable(sheetName)  
 
 
		Dim dataTable As New Data.DataTable()  
 
 
		Dim  connectionString As String = "Data Source=172.20.1.25;Connection Timeout=60000; Initial Catalog=MFG_ReportSystem_PRD;User ID=MFG_ReportSystem;Password=U2!5J9^45H35|N@YRCS2;pooling=true"  
		Dim query As String = "SELECT * FROM TestVB" 
		' 创建一个新的SqlConnection对象  
		Using connection As New System.Data.SqlClient.SqlConnection(connectionString)  
			Try  
				' 打开连接  
				connection.Open()  
 
				' 创建一个SqlCommand对象  
				Using command As New System.Data.SqlClient.SqlCommand(query, connection)  
 
					' 创建一个SqlDataAdapter对象来填充DataSet  
					Using adapter As New System.Data.SqlClient.SqlDataAdapter(command)  
 
						adapter.Fill(dataTable) ' 填充DataTable  
 
					End Using ' SqlDataAdapter  
 
				End Using ' SqlCommand  
 
			Catch ex As Exception  
				' 异常处理  
				msgbox("Error: " & ex.Message)  
			End Try  
		End Using ' SqlConnection  
 
		'Dim found As Boolean = False  
 
 
		If dtExcel.Columns.Contains("PART 1") Then  
			dtExcel.Columns("PART 1").ColumnName = "PART1" 
 
		End If 
		If  dtExcel.Columns.Contains("PART 2")  Then  
			dtExcel.Columns("PART 2").ColumnName = "PART2"  
		End If 
 
 
		'If  dataTable.Columns.Contains("*_MIN")  Then 
		'	dataTable.Columns.Add("*_MIN", GetType(String)) 
		'End If 
		'If  dataTable.Columns.Contains("*_MAX")  Then  
		'	dataTable.Columns.Add("*_MAX", GetType(String)) 
		'End If 
 
 
 
		Dim dtNew As DataTable = dtExcel.Copy() ' 复制结构 和数据  
 
		'' 遍历DataTable中的每一行 
		'For Each row As DataRow In dtExcel.Rows 
		'	' 如果已经找到包含"Part1"的行，则将之后的行添加到newDataTable中 
		'	If found Then 
		'		newDataTable.ImportRow(row) 
		'	Else 
		'		' 遍历当前行的每一列 
		'		For Each col As DataColumn In dtExcel.Columns 
		'			' 检查当前列的值是否为"Part1" 
		'			If row(col).ToString() = "PART1" Then 
		'				newDataTable.ImportRow(row) 
		'				found = True 
		'				' 退出内层循环，因为我们已经找到了包含"Part1"的行 
		'				Exit For 
		'			End If 
		'		Next 
		'	End If 
		'Next 
 
 
 
 
		'If newDataTable Is Nothing OrElse newDataTable.Rows.Count = 0 Then 
		'	msgbox("DataTable 为空或没有行。") 
		'	Return 
		'End If 
 
		'' 创建一个新的 DataTable  
		'Dim dtNew As New DataTable() 
 
		'' 遍历第一行来创建新列 
		'Dim firstRow As DataRow = newDataTable.Rows(0) 
		'For Each item As Object In firstRow.ItemArray 
		'	Dim columnName As String = item.ToString().Trim() 
		'	' 添加新列，这里假设所有列都是字符串类型 
		'	' 如果列名可能为空或重复，您可能需要添加一些额外的逻辑来处理这些情况 
		'	dtNew.Columns.Add(columnName, GetType(String)) 
		'Next 
 
		'' 遍历除了第一行以外的所有行，并将数据复制到新表中 
		'For rowIndex As Integer = 1 To newDataTable.Rows.Count - 1 
		'	Dim sourceRow As DataRow = newDataTable.Rows(rowIndex) 
		'	Dim newRow As DataRow = dtNew.NewRow() 
 
		'	' 遍历源行的每个单元格，并将数据添加到新行中 
		'	' 注意：这里我们假设源行的数据与新表的列是一一对应的 
		'	For columnIndex As Integer = 0 To sourceRow.ItemArray.Length - 1 
		'		newRow(columnIndex) = sourceRow(columnIndex).ToString() ' 将数据转换为字符串，或者根据需要保留原始类型 
		'	Next 
 
		'	dtNew.Rows.Add(newRow) 
		'Next 
 
 
 
		''到时需要保存这个Excel 
		Dim dtNewExcel As New DataTable() 
		dtNewExcel.Columns.Add("PART1", GetType(String)) 
		dtNewExcel.Columns.Add("PART2", GetType(String)) 
		dtNewExcel.Columns.Add("VOLUME", GetType(String)) 
		dtNewExcel.Columns.Add("FASTENER REMARKS", GetType(String)) 
		dtNewExcel.Columns.Add("RESULTS", GetType(String)) 
		dtNewExcel.Columns.Add("STATE", GetType(String)) 
 
		''用来存 Part1 或者Part2 找的 数据 
		dtNewExcel.Columns.Add("PART1ByRows", GetType(String)) 
		dtNewExcel.Columns.Add("PART2ByRows", GetType(String)) 
 
		'判断是否为* 是否为空文本 
		dtNewExcel.Columns.Add("ISNULLStr", GetType(String))  
 
		'判断优先级长度，增加两列  
		dtNewExcel.Columns.Add("PART1ByRowLen", GetType(String))  
		dtNewExcel.Columns.Add("PART1ByColLen", GetType(String)) 
 
 
		dtNewExcel.Columns.Add("PART1ByColMin", GetType(String)) 
		dtNewExcel.Columns.Add("PART1ByColMax", GetType(String)) 
 
		dtNewExcel.Columns.Add("PART2ByColMin", GetType(String)) 
		dtNewExcel.Columns.Add("PART2ByColMax", GetType(String)) 
		'新增  
		dtNewExcel.Columns.Add("UniversalMin", GetType(String))  
		dtNewExcel.Columns.Add("UniversalMAX", GetType(String)) 
 
		''存区间值 
		dtNewExcel.Columns.Add("MAX", GetType(String)) 
		dtNewExcel.Columns.Add("MIN", GetType(String)) 
 
 
 
		For Each row1 As DataRow In dtNew.Rows 
			' 遍历第二个 DataTable 的每一行来寻找匹配项 
			Dim foundMatch As Boolean = False 
 
			Dim rowNew As DataRow = dtNewExcel.NewRow() 
 
			rowNew("PART1") = row1("PART1").ToString() 
			rowNew("PART2") = row1("PART2").ToString() 
			rowNew("VOLUME") = row1("VOLUME").ToString()  
			Dim Part1 As String = row1("PART1").ToString() 
			Dim Part2 As String = row1("PART2").ToString() 
 
			For Each row2 As DataRow In dataTable.Rows 
				' 对比两个 DataRow 中 "CompareColumn" 列的值 
 
				Dim Component As String = row2("Component").ToString() 
				Dim firstChar As Char = Component.Substring(0, 1) 
				Dim lastChar As Char = Component.Substring(Component.Length - 1, 1) 
 
				''先定义 rowindex 和colindex 
 
				Dim rowindex As Integer = -1 
				Dim colindex As Integer = -1 
 
				'		'判断有几个*号，如果有多个*号 就用循环，不用这种写法  
				'		Dim starCount As Integer = Len(Component) - Len(Replace(Component, "*", ""))  
 
				'		Dim IsThreePart1 As Boolean = True  
				'		Dim IsThreePart2  As Boolean = True 
 
				'		If starCount >= 3 Then  
				'			Dim parts() As String = Component.Split({"*"C}, StringSplitOptions.RemoveEmptyEntries) 
				'			For Each Part As String In parts 
				'				If Part1.Contains(Part) =False Then 
				'					IsThreePart1=False  
				'				End If  
				'				If Part2.Contains(Part) =False Then  
				'					IsThreePart1=False  
				'				End If  
				'			Next 
 
 
				'			If IsThreePart1  Then  
				'				rowNew("PART1ByRows") = Component  
				'			End If  
 
				'			''如果part2 能在数据库找到，先记录下来是哪个行  
				'			If IsThreePart2  Then  
				'				rowNew("PART2ByRows") = Component  
				'			End If  
				'判断有几个*号，如果有多个*号 就用循环，不用这种写法  
				Dim starCount As Integer = Len(Component) - Len(Replace(Component, "*", "")) 
 
				If starCount = 3 Then 
					Dim parts() As String = Component.Split({"*"C}, StringSplitOptions.RemoveEmptyEntries) 
					Dim gasl As String = parts(0) 
					Dim ePart As String = parts(1) 
					If Part1.Contains(gasl) And Part1.Contains(ePart) Then 
						rowNew("PART1ByRows") = Component 
						If row2("*_MIN").ToString() ="-1" Then 
							rowNew("UniversalMin")=row2("*_MIN").ToString() 
						End If  
						If row2("*_MAX").ToString() ="-1" Then  
							rowNew("UniversalMax")=row2("*_MAX").ToString()  
						End If  
 
					End If 
 
					''如果part2 能在数据库找到，先记录下来是哪个行 
					If Part2.Contains(gasl) And Part2.Contains(ePart) Then 
						rowNew("PART2ByRows") = Component 
						If row2("*_MIN").ToString() ="-1" Then  
							rowNew("UniversalMin")=row2("*_MIN").ToString() 
						End If  
						If row2("*_MAX").ToString() ="-1" Then  
							rowNew("UniversalMax")=row2("*_MAX").ToString()  
						End If  
					End If  
					'如果去除*号之后等于空  
				ElseIf  String.IsNullOrWhiteSpace(Component.Replace("*","")) Then  
					rowNew("ISNULLStr") = Component  
					If row2("*_MIN").ToString() ="-1" Then 
						rowNew("UniversalMin")=row2("*_MIN").ToString()  
					End If 
					If row2("*_MAX").ToString() ="-1" Then 
						rowNew("UniversalMax")=row2("*_MAX").ToString() 
					End If 
 
					'需要判断 第一个是否为* 最后一个是否为* 或者 最后一个为*号，或者 前后都有*号,前后都有*的话就使用包含  
				ElseIf firstChar = "*" And lastChar = "*" Then  
					''如果part1 能在数据库找到，先记录下来是哪个行 
					If Part1.Contains(Component.Replace("*", "")) Then 
						rowNew("PART1ByRows") = Component 
						If row2("*_MIN").ToString() ="-1" Then  
							rowNew("UniversalMin")=row2("*_MIN").ToString() 
						End If  
						If row2("*_MAX").ToString() ="-1" Then  
							rowNew("UniversalMax")=row2("*_MAX").ToString()  
						End If  
					End If 
 
					''如果part2 能在数据库找到，先记录下来是哪个行 
					If Part2.Contains(Component.Replace("*", "")) Then 
						rowNew("PART2ByRows") = Component 
						If row2("*_MIN").ToString() ="-1" Then  
							rowNew("UniversalMin")=row2("*_MIN").ToString() 
						End If  
						If row2("*_MAX").ToString() ="-1" Then  
							rowNew("UniversalMax")=row2("*_MAX").ToString()  
						End If  
 
					End If 
					''如果第一个为 *的时候 使用后面的字符模糊查找数据 
				ElseIf firstChar = "*" Then 
					'Excel取出来的字符长度必须要比 数据库查出来的要长 
					If Part1.Length > Component.Replace("*", "").Length Then 
						'如果是前面为 * 则代表是以 Component为结束 
						If Part1.Substring(Part1.Length - Component.Replace("*", "").Length, Component.Replace("*", "").Length) = Component.Replace("*", "") Then 
							rowNew("PART1ByRows") = Component 
							If row2("*_MIN").ToString() ="-1" Then  
								rowNew("UniversalMin")=row2("*_MIN").ToString()  
							End If 
							If row2("*_MAX").ToString() ="-1" Then 
								rowNew("UniversalMax")=row2("*_MAX").ToString() 
							End If 
						End If 
					End If 
 
 
					If Part2.Length > Component.Replace("*", "").Length Then 
						''如果part2 能在数据库找到，先记录下来是哪个行 
						If Part2.Substring(Part2.Length - Component.Replace("*", "").Length, Component.Replace("*", "").Length) = Component.Replace("*", "") Then 
							rowNew("PART2ByRows") = Component 
							If row2("*_MIN").ToString() ="-1" Then  
								rowNew("UniversalMin")=row2("*_MIN").ToString()  
							End If 
							If row2("*_MAX").ToString() ="-1" Then 
								rowNew("UniversalMax")=row2("*_MAX").ToString() 
							End If 
						End If 
 
					End If 
				ElseIf lastChar = "*" Then 
					'Excel取出来的字符长度必须要比 数据库查出来的要长 
					'如果是后面为 * 则代表是以 Component为开头 
					If Part1.Length > Component.Replace("*", "").Length Then 
 
						If Part1.Substring(0, Component.Replace("*", "").Length) = Component.Replace("*", "") Then 
							rowNew("PART1ByRows") = Component 
							If row2("*_MIN").ToString() ="-1" Then  
								rowNew("UniversalMin")=row2("*_MIN").ToString()  
							End If 
							If row2("*_MAX").ToString() ="-1" Then 
								rowNew("UniversalMax")=row2("*_MAX").ToString() 
							End If 
						End If 
					End If 
					If Part2.Length > Component.Replace("*", "").Length Then 
						''如果part2 能在数据库找到，先记录下来是哪个行 
						If Part2.Substring(0, Component.Replace("*", "").Length) = Component.Replace("*", "") Then 
							rowNew("PART2ByRows") = Component 
							If row2("*_MIN").ToString() ="-1" Then  
								rowNew("UniversalMin")=row2("*_MIN").ToString()  
							End If 
							If row2("*_MAX").ToString() ="-1" Then 
								rowNew("UniversalMax")=row2("*_MAX").ToString() 
							End If 
						End If 
 
					End If 
				End If 
 
 
			Next 
 
			''行已经匹配完成了，目前去找列 
			For Each col2 As DataColumn In dataTable.Columns 
				' 对比两个 DataRow 中 "CompareColumn" 列的值 
 
				''获取列名 
				Dim ColName As String = col2.ColumnName 
				Dim ColNameRep As String = ColName.Replace("_MIN", "").Replace("_MAX", "") 
				Dim firstChar As Char = ColNameRep.Substring(0, 1) 
				Dim lastChar As Char = ColNameRep.Substring(ColNameRep.Length - 1, 1) 
 
				''先定义 rowindex 和colindex 
 
				Dim rowindex As Integer = -1 
				Dim colindex As Integer = -1 
				'列名不可以等于*MIN 或者*MAX 
				If String.IsNullOrWhiteSpace(ColNameRep)=False And  ColNameRep <>"*" Then 
 
					Dim starCount As Integer = Len(ColNameRep) - Len(Replace(ColNameRep, "*", ""))  
					If starCount = 3 Then  
						Dim parts() As String = ColNameRep.Split({"*"C}, StringSplitOptions.RemoveEmptyEntries)  
						Dim gasl As String = parts(0)  
						Dim ePart As String = parts(1)  
						''如果part1 能在数据库找到，先记录下来是哪个行  
						If Part1.Contains(gasl) And Part1.Contains(ePart) Then  
							If ColName.Contains("MAX") Then  
								rowNew("PART1ByColMAX") = ColName  
 
							Else  
								rowNew("PART1ByColMin") = ColName  
							End If  
						End If  
 
						''如果part2 能在数据库找到，先记录下来是哪个行  
						If Part2.Contains(gasl) And Part2.Contains(ePart) Then  
							If ColName.Contains("MAX") Then  
								rowNew("PART2ByColMAX") = ColName  
 
							Else  
								rowNew("PART2ByColMin") = ColName  
							End If  
						End If  
						'需要判断 第一个是否为* 最后一个是否为* 或者 最后一个为*号，或者 前后都有*号,前后都有*的话就使用包含 
					ElseIf firstChar = "*" And lastChar = "*" Then  
						''如果part1 能在数据库找到，先记录下来是哪个行  
						If Part1.Contains(ColNameRep.Replace("*", "")) Then  
							If ColName.Contains("MAX") Then  
								rowNew("PART1ByColMAX") = ColName  
 
							Else  
								rowNew("PART1ByColMin") = ColName  
							End If  
						End If  
 
						''如果part2 能在数据库找到，先记录下来是哪个行  
						If Part2.Contains(ColNameRep.Replace("*", "")) Then  
							If ColName.Contains("MAX") Then  
								rowNew("PART2ByColMAX") = ColName  
 
							Else  
								rowNew("PART2ByColMin") = ColName  
							End If  
 
 
						End If  
						''如果第一个为 *的时候 使用后面的字符模糊查找数据  
					ElseIf firstChar = "*" Then  
						'Excel取出来的字符长度必须要比 数据库查出来的要长  
						If Part1.Length > ColNameRep.Replace("*", "").Length Then  
							'如果是前面为 * 则代表是以 Component为结束  
							If Part1.Substring(Part1.Length - ColNameRep.Replace("*", "").Length, ColNameRep.Replace("*", "").Length) = ColNameRep.Replace("*", "") Then  
								If ColName.Contains("MAX") Then  
									rowNew("PART2ByColMAX") = ColName  
 
								Else  
									rowNew("PART2ByColMin") = ColName  
								End If  
							End If  
 
						End If  
 
						If Part2.Length > ColNameRep.Replace("*", "").Length Then  
							''如果part2 能在数据库找到，先记录下来是哪个行  
							If Part2.Substring(0, ColNameRep.Replace("*", "").Length) = ColNameRep.Replace("*", "") Then  
								If ColName.Contains("MAX") Then  
									rowNew("PART2ByColMAX") = ColName  
								Else  
									rowNew("PART2ByColMin") = ColName  
								End If  
							End If  
						End If 
 
 
 
					ElseIf lastChar = "*" Then  
						'Excel取出来的字符长度必须要比 数据库查出来的要长  
						'如果是后面为 * 则代表是以 Component为开头  
						If Part1.Length > ColNameRep.Replace("*", "").Length Then 
							If Part1.Substring(0, ColNameRep.Replace("*", "").Length) = ColNameRep.Replace("*", "") Then  
								If ColName.Contains("MAX") Then  
									rowNew("PART2ByColMAX") = ColName  
 
								Else  
									rowNew("PART2ByColMin") = ColName  
								End If  
							End If  
 
 
						End If  
						If Part2.Length > ColNameRep.Replace("*", "").Length Then  
							''如果part2 能在数据库找到，先记录下来是哪个行  
							If Part2.Substring(0, ColNameRep.Replace("*", "").Length) = ColNameRep.Replace("*", "") Then  
								If ColName.Contains("MAX") Then  
									rowNew("PART2ByColMAX") = ColName  
								Else  
									rowNew("PART2ByColMin") = ColName  
								End If  
							End If  
						End If 
					End If  
				End If 
			Next 
 
 
			''插入新行 
			dtNewExcel.Rows.Add(rowNew) 
		Next 
		Dim i As Integer = 0 
		''循环把 MAX 和MIN的值拿出来 生成最终Excel 
		For Each row1 As DataRow In dtNewExcel.Rows 
 
			Dim Part1 As String = row1("PART1ByRows").ToString() 
			Dim Part2 As String = row1("PART2ByRows").ToString() 
			Dim ISNULLStr As String = row1("ISNULLStr").ToString()  
 
			Dim PART1ByColMin As String = row1("PART1ByColMin").ToString() 
			Dim PART1ByColMax As String = row1("PART1ByColMax").ToString() 
			Dim PART2ByColMin As String = row1("PART2ByColMin").ToString() 
			Dim PART2ByColMax As String = row1("PART2ByColMax").ToString() 
 
			Dim UniversalMin As String = row1("UniversalMin").ToString()  
			Dim UniversalMax As String = row1("UniversalMax").ToString() 
 
 
 
			Dim rowIndex As String = "" ' 假设我们想要获取第三行的数据（索引从0开始） 
			Dim MAX As String = "" 
			Dim MIN As String = "" 
			'如果PART1和PART2 都等于空，PART1=IsNULLStr  
			If  String.IsNullOrWhiteSpace(Part1)  And String.IsNullOrWhiteSpace(Part2)  Then 
				rowIndex=ISNULLStr 
				''如果Part1 等于空，就去Part2，如果这两个都等于空就直接退出循环  
			ElseIf String.IsNullOrWhiteSpace(Part1) = False Then 
				'如果PART1有值的话就要把要把PRAR1COL的值清空 
				rowIndex = Part1 
				'		PART1ByColMin=””  
				'		PART1ByColMax=””  
 
			ElseIf String.IsNullOrWhiteSpace(Part2) = False Then 
				'如果PART2有值的话就要把要把PRAR2COL的值清空  
				rowIndex = Part2 
				'		PART2ByColMin=”” 
				'		PART2ByColMax=””  
			End If 
			''列的值 
			If String.IsNullOrWhiteSpace(PART1ByColMin) = False Then 
				MIN = PART1ByColMin 
			ElseIf String.IsNullOrWhiteSpace(PART1ByColMin) Then 
				MIN = PART2ByColMin 
			End If 
 
			If String.IsNullOrWhiteSpace(PART1ByColMax) = False Then 
				MAX = PART1ByColMax 
 
			ElseIf String.IsNullOrWhiteSpace(PART1ByColMax) Then 
				MAX = PART2ByColMax 
			End If 
 
			'	If String.IsNullOrWhiteSpace(PART1ByColMin) = False Then  
			'		MIN = PART1ByColMin 
			'		MAX = PART1ByColMax  
 
			'	ElseIf  String.IsNullOrWhiteSpace(PART2ByColMin) = False Then 
			'		MIN = PART2ByColMin 
			'		MAX = PART2ByColMax 
			'	Else  
			'		MIN=""  
			'		MAX=""  
			'	End If 
 
 
			If row1("PART1").ToString() = row1("PART2").ToString() Then 
				row1("RESULTS") = "1" 
				row1("State") = "Failed" 
				row1("FASTENER REMARKS") = "Duplicate" 
				'只要有一个等于-1 就算成功  
			Else If  UniversalMin="-1" Or UniversalMax="-1" Then  
				row1("RESULTS") = "0" 
				row1("State") = "Success" 
				row1("FASTENER REMARKS") = "" 
				'这两种情况也算成功  
				'		ElseIf  MAX = "-1" Or MIN = "-1" Then  
				'			row1("RESULTS") = "0" 
				'			row1("State") = "Success"  
				'			row1("FASTENER REMARKS") = ""  
			ElseIf rowIndex <> "" And MAX <> "" And MIN <> "" Then 
				''都不等于空的时候获取MAX和Min,否则就要写入FASTENER REMARKS 和 RESULTS 
				For Each dataRow As DataRow In dataTable.Rows 
 
					If dataRow("Component").ToString() = rowIndex Then 
						Dim Maxvalue As String = dataRow(MAX).ToString() 
						Dim MinValue As String = dataRow(MIN).ToString() 
 
						Dim maxDouble As Double 
						Dim minDouble As Double  
						Dim maxConverted As Boolean = Double.TryParse(Maxvalue, maxDouble) 
						Dim minConverted As Boolean = Double.TryParse(MinValue, minDouble) 
 
						If maxConverted AndAlso minConverted Then 
							row1("MAX") = Convert.ToDouble(Maxvalue)  
							row1("MIN") = Convert.ToDouble(MinValue)  
							Dim VOLUME As Double = Convert.ToDouble(row1("VOLUME"))  
							'如果其中一个等于-1 
							If  Convert.ToDouble(MinValue)=-1 Or Convert.ToDouble(Maxvalue) =-1 Then  
								row1("RESULTS") = "0"  
								row1("State") = "Success"  
								row1("FASTENER REMARKS") = ""  
								'MAX必须大于MIN,所以只需要判断MIN就好，小于100就成功  
								'						Else If Convert.ToDouble(MinValue)<100 Then  
								'							row1("RESULTS") = "0"  
								'							row1("State") = "Success" 
								'							row1("FASTENER REMARKS") = "" 
							Else If VOLUME >=Convert.ToDouble(MinValue) And VOLUME < =Convert.ToDouble(Maxvalue) Then 
								row1("RESULTS") = "0" 
								row1("State") = "Success"  
								row1("FASTENER REMARKS") = "" 
							Else 
								row1("RESULTS") = "1" 
								row1("STATE") = "Failed"  
								row1("FASTENER REMARKS") = "LOW THREAD ENGAGEMENT, SHOULD BE " + row1("MIN") + " TO " + row1("MAX") 
							End If 
						Else  
							row1("RESULTS") = "1"  
							row1("STATE") = "Failed"  
							row1("FASTENER REMARKS") = "数据库中没有值"  
						End If 
 
					End If  
				Next 
			Else 
				row1("RESULTS") = "1" 
				row1("STATE") = "Failed" 
				row1("FASTENER REMARKS") = "没有查询到数据" 
			End If 
		Next 
 
		''用来存 Part1 或者Part2 找的 数据 
		'dtNewExcel.Columns.Add("PART1ByRows", GetType(String)) 
		'dtNewExcel.Columns.Add("PART2ByRows", GetType(String)) 
 
 
		'dtNewExcel.Columns.Add("PART1ByColMin", GetType(String)) 
		'dtNewExcel.Columns.Add("PART1ByColMax", GetType(String)) 
 
		'dtNewExcel.Columns.Add("PART2ByColMin", GetType(String)) 
		'dtNewExcel.Columns.Add("PART2ByColMax", GetType(String)) 
 
 
		'RemoveCol(dtNewExcel, "PART1ByRows") 
		'RemoveCol(dtNewExcel, "PART2ByRows") 
		'RemoveCol(dtNewExcel, "PART1ByColMin") 
		'RemoveCol(dtNewExcel, "PART1ByColMax") 
		'RemoveCol(dtNewExcel, "PART2ByColMin") 
		'RemoveCol(dtNewExcel, "PART2ByColMax") 
		'RemoveCol(dtNewExcel, "MAX") 
		'RemoveCol(dtNewExcel, "MIN") 
 
 
 
 
 
		Dim excelName As String=DateTime.Now.ToString("yyyyMMddHHmmss")&".xlsx"  
 
		Dim excelNew As New XLSXExport()  
 
		excelNew.AddSheet(sheetName)  
 
		excelNew.CellValue(sheetName,1,1)=  "PART1"  
		excelNew.CellValue(sheetName,1,2)=  "PART2"  
		excelNew.CellValue(sheetName,1,3)=  "VOLUME"  
		excelNew.CellValue(sheetName,1,4)=  "FASTENER REMARKS"  
		excelNew.CellValue(sheetName,1,5)=  "RESULTS"  
		excelNew.CellValue(sheetName,1,6)=  "STATE"  
 
		'	''调试用 
		'	excelNew.CellValue(sheetName,1,7)=  "PART1ByRows" 
		'	excelNew.CellValue(sheetName,1,8)=  "PART2ByRows" 
 
		'	excelNew.CellValue(sheetName,1,9)=  "PART1ByColMin" 
		'	excelNew.CellValue(sheetName,1,10)=  "PART1ByColMax" 
		'	excelNew.CellValue(sheetName,1,11)=  "PART2ByColMin" 
		'	excelNew.CellValue(sheetName,1,12)=  "PART2ByColMax" 
		'	excelNew.CellValue(sheetName,1,13)=  ”MAX“ 
		'	excelNew.CellValue(sheetName,1,14)=  "MIN" 
 
		Dim IsMatch As Boolean = False  
 
		For xx As Integer = 2  To dtNewExcel.Rows.Count +1  
 
			' 	'更改颜色 
			If 	 Convert.ToInt32(dtNewExcel.Rows(xx-2)("RESULTS") ) = 1 And  dtNewExcel.Rows(xx-2)("FASTENER REMARKS") .ToString() <>"Duplicate"    Then 
 
				Dim VolumeTry As Double 
				Dim VolumeStr=dtNewExcel.Rows(xx-2)("VOLUME").ToString()  
				Dim VolumeConverted As Boolean = Double.TryParse(VolumeStr, VolumeTry) 
				If VolumeConverted And Convert.ToDouble(VolumeStr)<100 And dtNewExcel.Rows(xx-2)("MAX").ToString() ="" And  dtNewExcel.Rows(xx-2)("MIN").ToString() ="" Then 
					dtNewExcel.Rows(xx-2)("RESULTS") = "0"  
					dtNewExcel.Rows(xx-2)("STATE") = "Success" 
					dtNewExcel.Rows(xx-2)("FASTENER REMARKS") = "" 
				Else 
					excelNew.CellBackcolor(sheetName,xx,4)=Color.Red  
					IsMatch=True  
				End If 
			Else If  Convert.ToInt32(dtNewExcel.Rows(xx-2)("RESULTS") ) = 1 Then  
				excelNew.CellBackcolor(sheetName,xx,4)=Color.Red 
				IsMatch=True 
			End If  
 
			excelNew.CellValue(sheetName,xx,1)=  dtNewExcel.Rows(xx-2)("PART1") 
			excelNew.CellValue(sheetName,xx,2)=  dtNewExcel.Rows(xx-2)("PART2")  
			excelNew.CellValue(sheetName,xx,3)=  dtNewExcel.Rows(xx-2)("VOLUME")  
			excelNew.CellValue(sheetName,xx,4)=  dtNewExcel.Rows(xx-2)("FASTENER REMARKS")  
			excelNew.CellValue(sheetName,xx,5)=  dtNewExcel.Rows(xx-2)("RESULTS") 
			excelNew.CellValue(sheetName,xx,6)=  dtNewExcel.Rows(xx-2)("STATE")  
 
 
			'		'调试专用 
			'		excelNew.CellValue(sheetName,xx,7)=  dtNewExcel.Rows(xx-2)("PART1ByRows")  
			'		excelNew.CellValue(sheetName,xx,8)=  dtNewExcel.Rows(xx-2)("PART2ByRows") 
			'		excelNew.CellValue(sheetName,xx,9)=  dtNewExcel.Rows(xx-2)("PART1ByColMin")  
			'		excelNew.CellValue(sheetName,xx,10)=  dtNewExcel.Rows(xx-2)("PART1ByColMax") 
			'		excelNew.CellValue(sheetName,xx,11)=  dtNewExcel.Rows(xx-2)("PART2ByColMin") 
			'		excelNew.CellValue(sheetName,xx,12)=  dtNewExcel.Rows(xx-2)("PART2ByColMax") 
			'		excelNew.CellValue(sheetName,xx,13)=  dtNewExcel.Rows(xx-2)("MAX")  
			'		excelNew.CellValue(sheetName,xx,14)=  dtNewExcel.Rows(xx-2)("MIN")  
 
 
 
		Next 
 
		'自动宽度  
		excelNew.ColumnsAutoFit(sheetName)  
 
		If IsMatch Then  
			excelNew.CellValue(sheetName,1,7)= "Failed"  
			excelNew.ColumnWidth(sheetName, 7) =24  
			excelNew.CellFontSize(sheetName, 1, 7) =24  
			excelNew.CellBold(sheetName, 1, 7) =True  
			excelNew.CellForecolor(sheetName, 1, 7) =Color.Red  
		End If 
 
		If Not System.IO.Directory.Exists(savePath)  Then  
			' 如果文件夹不存在，则创建它 
			System.IO.Directory.CreateDirectory(savePath) 
		End If 
 
 
 
		'移除的代码 
		Dim uniqueRows As New System.Collections.Generic.Dictionary(Of String, Integer) 
		Dim rowsToDelete As New System.Collections.Generic.List(Of DataRow)  
 
 
		If dtNewExcel.Columns.Contains("PART 1") Then  
			dtNewExcel.Columns("PART 1").ColumnName = "PART1" 
 
		End If 
		If  dtNewExcel.Columns.Contains("PART 2")  Then  
			dtNewExcel.Columns("PART 2").ColumnName = "PART2"  
		End If 
		If  dtNewExcel.Columns.Contains("FASTENER REMARKS")  Then  
			dtNewExcel.Columns("FASTENER REMARKS").ColumnName = "FASTENERREMARKS"  
		End If 
 
 
		' 遍历DataTable的每一行  
		For Each row As DataRow In dtNewExcel.Rows  
			' 生成组合键：将ColumnA, ColumnB, ColumnC的值连接起来，这里使用"-"作为分隔符 
			' 注意：在实际应用中，你可能需要选择一个不太可能在列值中出现的字符作为分隔符 
			Dim key As String = String.Format("{0}|{1}|{2}", row("PART1").ToString(), row("PART2").ToString(), row("VOLUME").ToString()) 
 
			' 检查组合键是否已经在字典中 
			If uniqueRows.ContainsKey(key) Then 
				' 如果存在，则增加该键的计数 
				uniqueRows(key) += 1 
				rowsToDelete.Add(row) ' 标记为删除 
			Else 
				' 如果不存在，则添加新条目，计数为1 
				uniqueRows.Add(key, 1) 
			End If 
		Next  
 
 
		' 删除重复的行  
		For Each row As DataRow In rowsToDelete  
			row.Delete() 
		Next  
 
		dtExcel.AcceptChanges()  
 
 
		dtNewExcel.Columns.Add("DuplicateCount", GetType(Integer))  
 
		' 重新遍历DataTable来填充新列（但这次只针对未删除的行）  
		Dim nonDuplicateCount As Integer = 0  
		For Each row As DataRow In dtNewExcel.Rows  
			If Not row.RowState = DataRowState.Deleted Then 
				Dim key As String = String.Format("{0}|{1}|{2}", row("PART1").ToString(), row("PART2").ToString(), row("VOLUME").ToString())  
				If uniqueRows.ContainsKey(key) AndAlso uniqueRows(key) > 1 Then 
					' 这里我们不填充重复项的值，因为它们已被删除  
					row("DuplicateCount") = uniqueRows(key) 
					nonDuplicateCount += 1 ' 如果你想要计算非重复项的数量 
				Else 
					' 对于非重复项，我们可能想将其DuplicateCount设置为1或忽略 
					row("DuplicateCount") = 1 
				End If 
			End If 
		Next  
 
 
 
		For ii As Integer = dtNewExcel.Rows.Count - 1 To 0 Step -1 
			' 检查当前行的指定列的值是否等于 0 
 
			If Convert.ToInt32(dtNewExcel.Rows(ii)("RESULTS")) = 0 Then 
				' 如果等于0，则删除该行 
				dtNewExcel.Rows(ii).Delete() 
			End If 
		Next 
 
		dtNewExcel.AcceptChanges() 
 
 
 
		'Dim excelNew As New XLSXExport()  
		sheetName="Sheet2" 
		excelNew.AddSheet(sheetName)  
 
		excelNew.CellValue(sheetName,1,1)=  "PART1"  
		excelNew.CellValue(sheetName,1,2)=  "PART2"  
		excelNew.CellValue(sheetName,1,3)=  "VOLUME"  
		excelNew.CellValue(sheetName,1,4)=  "FASTENER REMARKS"  
		excelNew.CellValue(sheetName,1,5)=  "RESULTS"  
		excelNew.CellValue(sheetName,1,6)=  "State"  
		excelNew.CellValue(sheetName,1,7)=  "REPEAT TIMES"  
		Dim IsMatchA As Boolean = False  
		For xx As Integer = 2  To dtNewExcel.Rows.Count +1  
			excelNew.CellValue(sheetName,xx,1)=  dtNewExcel.Rows(xx-2)("PART1") 
			excelNew.CellValue(sheetName,xx,2)=  dtNewExcel.Rows(xx-2)("PART2")  
			excelNew.CellValue(sheetName,xx,3)=  dtNewExcel.Rows(xx-2)("VOLUME")  
			excelNew.CellValue(sheetName,xx,4)=  dtNewExcel.Rows(xx-2)("FASTENERREMARKS")  
			excelNew.CellValue(sheetName,xx,5)=  dtNewExcel.Rows(xx-2)("RESULTS")  
			excelNew.CellValue(sheetName,xx,6)=  dtNewExcel.Rows(xx-2)("State") 
			excelNew.CellValue(sheetName,xx,7)=  dtNewExcel.Rows(xx-2)("DuplicateCount")  
 
			If 	 Convert.ToInt32(dtNewExcel.Rows(xx-2)("RESULTS") ) = 1 Then  
				excelNew.CellBackcolor(sheetName,xx,4)=Color.Red 
				IsMatchA=True  
			End If  
 
		Next 
 
		'自动宽度  
		excelNew.ColumnsAutoFit(sheetName)  
 
		If IsMatchA Then  
			excelNew.CellValue(sheetName,1,8)= "JUST"  
		End If 
 
 
 
		excelNew.SavetoFile(savePath & excelName, True)  
 
 
	Catch  ex As Exception 
		msgbox(ex.Message)  
	End Try 
	 
	 
	 
End Function  


